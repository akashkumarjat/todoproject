{"version":3,"sources":["images/todo.png","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","console","log","JSON","parse","getLocalItmes","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","editItem","index","updateditems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,MAA0B,iC,eC+I1BA,EA7HF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAdR,WAClB,IAAIG,EAAOC,aAAaC,QAAQ,SAGhC,OAFAC,QAAQC,IAAIJ,GAERA,EACOK,KAAKC,MAAML,aAAaC,QAAQ,UAEhC,GAOwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KACA,EAAoCd,mBAAS,MAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACZ,GAAKhB,EAEE,GAAIA,IAAcY,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACL,2BAAKI,GAAZ,IAAkBE,KAAMpB,IAErBkB,MAGfL,GAAgB,GAEhBZ,EAAa,IAEbc,EAAc,UACX,CACH,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMpB,GAClEW,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBpB,EAAa,SAlBbwB,MAAM,qBAkEd,OAJAC,qBAAU,WACNvB,aAAawB,QAAQ,QAASpB,KAAKqB,UAAUlB,MAC9C,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKA,UAAU,YAAYC,IAAKC,EAAMC,IAAI,aAC1C,sEAGJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,sBAC3BC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAAaoC,EAAEC,OAAOH,UAGvCvB,EAAe,mBAAGiB,UAAU,qBAAqBU,MAAM,WAAWC,QAASxB,IACvE,mBAAGa,UAAU,sBAAsBU,MAAM,cAAcC,QAASxB,OAK5E,qBAAKa,UAAU,YAAf,SAGQnB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAKE,OACV,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBU,MAAM,YAAYC,QAAS,kBAtDrF,SAACrB,GACd,IAAIsB,EAAc/B,EAAMgC,MAAK,SAACxB,GAC1B,OAAOA,EAAKC,KAAOA,KAEvBd,QAAQC,IAAImC,GAEZ5B,GAAgB,GAEhBZ,EAAawC,EAAYrB,MAEzBL,EAAcI,GA4C0FwB,CAASzB,EAAKC,OAClF,mBAAGU,UAAU,2BAA2BU,MAAM,cAAcC,QAAS,kBAxE1F,SAACI,GAChB,IAAMC,EAAenC,EAAMoC,QAAO,SAAC5B,GAC/B,OAAO0B,IAAU1B,EAAKC,MAG1BR,EAASkC,GAmEsGE,CAAW7B,EAAKC,YAJpED,EAAKC,SAepD,qBAAKU,UAAU,YAAf,SACI,yBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QAnDlE,WACd7B,EAAS,KAkDO,UAAoF,gDAApF,iBC5HTqC,MATf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACC,cAAC,EAAD,OCOUoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff5f38fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.94fa49e4.png\";","import React, { useState, useEffect } from 'react'\r\nimport todo from \"../images/todo.png\";\r\nimport \"../css/todo.css\"\r\n\r\n\r\n// to get the data from LS\r\n\r\nconst getLocalItmes = () => {\r\n    let list = localStorage.getItem('lists');\r\n    console.log(list);\r\n\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItmes());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('Please Fill Data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n\r\n            setInputData('');\r\n\r\n            setIsEditItem(null);\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n\r\n    // delete the items\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n\r\n        setItems(updateditems);\r\n    }\r\n\r\n    // edit the item\r\n    //     When user clikc on edit button \r\n\r\n    // 1: get the id and name of the data which user clicked to edit\r\n    // 2: set the toggle mode to change the submit button into edit button\r\n    // 3: Now update the value of the setInput with the new updated value to edit. \r\n    // 4: To pass the current element Id to new state variable for reference \r\n\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        console.log(newEditItem);\r\n\r\n        setToggleSubmit(false);\r\n\r\n        setInputData(newEditItem.name);\r\n\r\n        setIsEditItem(id);\r\n\r\n    }\r\n\r\n\r\n    // remove all \r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // add data to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img className=\"img-fluid\" src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here ✌</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\r\n                                <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    {/* clear all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span> CHECK LIST </span> </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n","import Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Todo/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}